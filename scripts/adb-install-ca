#!/bin/bash

CMD="$0"
CMD_NAME="$(basename $CMD)"
CAFILE="$1"
WORKING_DIR='/data/local/tmp/cacerts'
CAFILE_TYPE="AUTO"

echo_help() {
  echo "$CMD_NAME: Install non-persistent root CA to Android device using tmpfs (including Android 10+)

Usage: $CMD_NAME [OPTIONS] <CAFILE>
By default the certificate type is inferred from the CAFILE extension.

Options:
  -h, --help
    Show this help page
  -d <DIR>
    Specify temp directory to use on Android device - default is \"$WORKING_DIR\"
  --DER
    Specify \"DER\" certificate type
  --PEM
    Specify \"PEM\" certificate type"
  exit 1
}

# Parse args

if [ -z $1 ]
then
  echo_help
fi

OPTIONS=$(getopt -n "$CMD_NAME" -o hd: -l DER,PEM,help -- "$@")
if [ $? -ne 0 ]
then
  exit 1
fi

eval set -- "$OPTIONS"
while true; do
  case "$1" in
  -h)
    ;&
  --help)
    echo_help
    ;;
  -d)
    shift
    WORKING_DIR="$1"
    ;;
  --DER)
    CAFILE_TYPE="DER"
    ;;
  --PEM)
    CAFILE_TYPE="PEM"
    ;;
  --)
    shift
    CAFILE="$1"
    break
    ;;
  esac
  shift
done

# Check dependencies

if [ -z "$(command -v adb)" ]
then
  echo "$CMD_NAME: ADB not installed."
  exit 1
fi

if [ -z "$(command -v openssl)" ]
then
  echo "$CMD_NAME: OpenSSL not installed."
  exit 1
fi

# Check adb root

if ! adb-check-root > /dev/null
then
  echo "$CMD_NAME: Unable to get root in ADB."
  exit 1
fi

# Check if working directory already exists on device

if [ -n "$(echo "[ -d \"$WORKING_DIR\" ] && echo \"Directory exists\"" | adb shell)" ]
then
  echo "$CMD_NAME: Working directory \"$WORKING_DIR\" already exists on the device. Delete the directory first, or specify another directory using \"-d\"."
  exit 1
fi

# Check file exists

if [ ! -f "$CAFILE" ]
then
  echo "$CMD_NAME: Unable to open file \"$CAFILE\"."
  exit 1
fi

# Infer certificate type

shopt -s nocasematch

if [ "$CAFILE_TYPE" == "AUTO" ]
then
  if [[ "$CAFILE" =~ (.*\.der)$ ]]
  then
    CAFILE_TYPE="DER"
  fi
  if [[ "$CAFILE" =~ (.*\.pem)$ ]]
  then
    CAFILE_TYPE="PEM"
  fi
fi

if [ "$CAFILE_TYPE" == "AUTO" ]
then
  echo "$CMD_NAME: Couldn't infer certificate type. Please ensure the file is correctly named, or specify the certificate type manually."
fi

# Re-export file to ensure it's in the correct format

if [ "$CAFILE_TYPE" == "DER" ]
then
  PEMCERT=$(openssl x509 -inform DER -outform PEM -in "$CAFILE")
fi

if [ "$CAFILE_TYPE" == "PEM" ]
then
  PEMCERT=$(openssl x509 -inform PEM -outform PEM -in "$CAFILE")
fi

if [ -z "$PEMCERT" ]
then
  echo "$CMD_NAME: Failed to convert certificate for Android. Ensure that the certificate is a valid $CAFILE_TYPE certificate."
  exit 1
fi

# Generate expected filename

HASHFILENAME="$(echo "$PEMCERT" | openssl x509 -inform PEM --subject_hash_old | head -n 1)"

echo "
mkdir $WORKING_DIR
" | adb shell

# Push cert file

adb push $CAFILE $WORKING_DIR/$HASHFILENAME.0

# Create tmpfs filesystem
echo "
su
cp /system/etc/security/cacerts/* $WORKING_DIR
mount -t tmpfs tmpfs /system/etc/security/cacerts/
cp $WORKING_DIR/* /system/etc/security/cacerts/
" | adb shell

# Fix permissions
echo "
su
chown root:root /system/etc/security/cacerts/*
chmod 644 /system/etc/security/cacerts/*
chcon u:object_r:system_file:s0 /system/etc/security/cacerts/*
" | adb shell

# Clean up working directory
echo "
rm -rf $WORKING_DIR
" | adb shell

echo "$CMD_NAME: Certificate successfully installed."
